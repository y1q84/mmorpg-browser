<?xml version="1.0" encoding="UTF-8"?>

<configuration scan="true" scanPeriod="60 second" debug="false" >
    <contextName>浏览器</contextName>
    <property name="log_dir" value="./logs/server" />
    <property name="maxHistory" value="30" />

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!-- 一是把日志信息转换成字节数组,二是把字节数组写入到输出流 -->
        <encoder>
            <pattern>%cn %d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <!--文件日志-->
    <!-- 滚动记录文件，先将日志记录到指定文件 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--当前日志文件名-->
        <file>${log_dir}/root/root.log</file>
        <!-- 最常用的滚动策略，它根据时间来制定滚动策略.既负责滚动也负责触发滚动 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--归档日志输出位置 可相对、和绝对路径,.zip结尾，归档日志自动压缩 -->
            <fileNamePattern>
                ${log_dir}/root/%d{yyyy_MM_dd}-root.log.zip
            </fileNamePattern>
            <!-- 可选节点，控制保留的归档文件的最大数量-->
            <maxHistory>${maxHistory}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>
                <!-- 设置日志输出格式 -->
                %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
            </pattern>
        </encoder>
    </appender>

    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--当前日志文件名-->
        <file>${log_dir}/error/error.log</file>
        <!-- 最常用的滚动策略，它根据时间来制定滚动策略.既负责滚动也负责触发滚动 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--归档日志输出位置 可相对、和绝对路径,.zip结尾，归档日志自动压缩 -->
            <fileNamePattern>
                ${log_dir}/error/%d{yyyy_MM_dd}-error.log.zip
            </fileNamePattern>
            <!-- 可选节点，控制保留的归档文件的最大数量-->
            <maxHistory>${maxHistory}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>
                <!-- 设置日志输出格式 -->
                %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %logger{36} - %msg%n
            </pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!-- 设置过滤级别 -->
            <level>ERROR</level>
            <!-- 用于配置符合过滤条件的操作 -->
            <onMatch>ACCEPT</onMatch>
            <!-- 用于配置不符合过滤条件的操作 -->
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <logger name="com" level="debug" additivity="false">
        <appender-ref ref="STDOUT"/>
    </logger>


    <root level="ERROR">
        <appender-ref ref="STDOUT" />
        <appender-ref ref="FILE" />
        <appender-ref ref="ERROR_FILE" />
    </root>

</configuration>
